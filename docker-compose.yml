version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: video-editor-db
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root123}
      MYSQL_DATABASE: ${DB_NAME:-video_editor}
      MYSQL_USER: ${DB_USER:-video_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-video_pass123}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - video-editor-network

  # Video Editor Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: video-editor-app
    environment:
      # Database
      DATABASE_URL: mysql://${DB_USER:-video_user}:${DB_PASSWORD:-video_pass123}@db:3306/${DB_NAME:-video_editor}
      
      # JWT & Auth
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      OAUTH_SERVER_URL: ${OAUTH_SERVER_URL:-https://api.manus.im}
      VITE_OAUTH_PORTAL_URL: ${VITE_OAUTH_PORTAL_URL:-https://auth.manus.im}
      
      # App Configuration
      VITE_APP_ID: ${VITE_APP_ID:-your-app-id}
      VITE_APP_TITLE: ${VITE_APP_TITLE:-Editor de Vídeos Automático}
      VITE_APP_LOGO: ${VITE_APP_LOGO:-}
      
      # Owner Configuration
      OWNER_NAME: ${OWNER_NAME:-Admin}
      OWNER_OPEN_ID: ${OWNER_OPEN_ID:-}
      
      # Manus API
      BUILT_IN_FORGE_API_URL: ${BUILT_IN_FORGE_API_URL:-https://api.manus.im}
      BUILT_IN_FORGE_API_KEY: ${BUILT_IN_FORGE_API_KEY:-}
      
      # Analytics (optional)
      VITE_ANALYTICS_ENDPOINT: ${VITE_ANALYTICS_ENDPOINT:-}
      VITE_ANALYTICS_WEBSITE_ID: ${VITE_ANALYTICS_WEBSITE_ID:-}
      
      # Node Environment
      NODE_ENV: ${NODE_ENV:-production}
    
    ports:
      - "${APP_PORT:-3000}:3000"
    
    volumes:
      - ./uploads:/app/uploads
      - ./outputs:/app/outputs
      - ./logs:/app/logs
    
    depends_on:
      db:
        condition: service_healthy
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    networks:
      - video-editor-network
    
    restart: unless-stopped

  # Optional: Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: video-editor-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
      - ./uploads:/app/uploads:ro
    depends_on:
      - app
    networks:
      - video-editor-network
    restart: unless-stopped
    profiles:
      - nginx

volumes:
  db_data:
    driver: local

networks:
  video-editor-network:
    driver: bridge

